intro = """
   ‚ñì‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ   ‚ñê‚ñà    ‚ñà‚ñà   ‚ñÑ‚ñì‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÑ   ‚ñà‚ñí‚ñÄ‚ñÄ‚ñÄ‚ñí      ‚ñì‚ñÄ‚ñì      ‚ñê‚ñà    ‚ñà‚ñà                  ‚ñì‚ñÄ‚ñì
   ‚ñí‚ñå‚ñÑ‚ñÑ‚ñÑ‚ñÄ   ‚ñê‚ñà  ‚ñÑ‚ñà‚ñÄ‚ñà  ‚ñì‚ñå         ‚ñà‚ñå         ‚ñì‚ñå ‚ñê‚ñì     ‚ñê‚ñà  ‚ñÑ‚ñà‚ñÄ‚ñà                 ‚ñì‚ñå ‚ñê‚ñì 
   ‚ñí‚ñå  ‚ñÄ‚ñà‚ñÑ  ‚ñê‚ñà‚ïî‚ñì‚ñÄ ‚ñê‚ñà  ‚ñà          ‚ñà‚ñå‚ñà‚ñå‚ñà‚ñå    ‚ñì‚ñå   ‚ñê‚ñì    ‚ñê‚ñà‚ïî‚ñì‚ñÄ ‚ñê‚ñà                ‚ñì‚ñå‚ñÑ‚ñÑ‚ñÑ‚ñê‚ñì 
   ‚ñí‚ñå  ‚ñÑ‚ñà‚ñÄ  ‚ñê‚ñà‚ñà   ‚ñê‚ñà  ‚ñÄ‚ñì‚ñÑ    ‚ñÑ   ‚ñà‚ñå       ‚ñì‚ñå     ‚ñê‚ñì   ‚ñê‚ñà‚ñà   ‚ñê‚ñà               ‚ñì‚ñå     ‚ñê‚ñì
   ‚ñÄ‚ñÄ‚ñÄ‚ñÄ     ‚ñÄ‚ñÄ     ‚ñÄ     ‚ñÄ‚ñÄ‚ñÄ‚ñÄ    ‚ñì‚ñí‚ñÑ‚ñÑ‚ñÑ‚ñí  ‚ñê‚ñà       ‚ñà‚ñå  ‚ñÄ‚ñÄ     ‚ñÄ  ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ  ‚ñê‚ñà       ‚ñà‚ñå
"""


stages = ['''
  +---+
  |   |
  O   |
 /|\  |
 / \  |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|\  |
 /    |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|\  |
      |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|   |
      |
      |
=========
''', '''
  +---+
  |   |
  O   |
  |   |
      |
      |
=========
''', '''
  +---+
  |   |
  O   |
      |
      |
      |
=========
''', '''
  +---+
  |   |
      |
      |
      |
      |
=========
''']


import random
vocabulary = ['Anton', 'Alex', 'Alexandr', 'Arsalan', 'Danil', 'Kirill', 'Sergey', 'Nikolay', 'Nasty', 'Natasha', 'Ivan', 'Igor', 'Gosha', 'Galina', 'Olya', 'Oksana', 'Oleg', 'James', 'Bill']
word_answer = random.choice(vocabulary).lower()

print(intro)

# —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ —Å–ª–æ–≤–∞
word_display = []
for i in range(len(word_answer)):
    word_display.append("_")  # –¥–æ–±–∞–≤–∏—Ç—å _ –≤ —Å–ø–∏—Å–æ–∫

counter = 0  # —Å—á—ë—Ç—á–∏–∫ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—ã—Ö –±—É–∫–∞—Ñ—Ñ
life = 6
print(word_display)

while counter != len(word_answer) and life > 0:  # –ø–æ–∫–∞ –∫–æ–ª-–≤–æ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—ã—Ö –±—É–∫–≤ != –∫–æ–ª-–≤—É –≤—Å–µ—Ö –±—É–∫–≤ –∏ –µ—Å—Ç—å –∂–∏–∑–Ω–∏
    print(stages[life])
    letter = input("–ë—É–∫–≤–∞: ")
    letter_is_be = False
    for i in range(len(word_answer)):  # –ø—Ä–æ–±–µ–≥–∞–µ–º—Å—è –ø–æ —Å–ª–æ–≤—É
        if letter == word_answer[i]:  # –µ—Å–ª–∏ –±—É–∫–≤–∞ —Ä–∞–≤–Ω–∞ –±—É–∫–≤–µ –∏–∑ —Å–ª–æ–≤–∞
            if word_display[i] != "_":  # –µ—Å–ª–∏ –±—É–∫–≤–∞ –æ—Ç–≥–∞–¥–∞–Ω–∞
                letter_is_be = True  # –±—É–∫–≤–∞ —É–∂–µ –±—ã–ª–∞

            else:  # –µ—Å–ª–∏ –±—É–∫–≤–∞ –Ω–µ –æ—Ç–≥–∞–¥–∞–Ω–∞
                word_display[i] = letter  # –ø—Ä–æ—è–≤–ª—è–µ–º –±—É–∫–≤—É
                counter += 1  # —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ counter = counter + 1
                letter_is_be = True  # –±—É–∫–≤–∞ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–µ
    if not letter_is_be:  # –µ—Å–ª–∏ –Ω–µ —É–≥–∞–¥–∞–ª
        life = life - 1
    print(word_display)
if counter == len(word_answer):  # –µ—Å–ª–∏ –æ—Ç–≥–∞–¥–∞–ª–∏ –≤—Å–µ –±—É–∫–≤—ã
    print("–¢—ã –ø–æ–±–µ–¥–∏–ª! üòé")
else:
    print(stages[life])
    print("–û—Ç–≤–µ—Ç:", word_answer)
    print("–ü—Ä–æ–∏–≥—Ä–∞–ª, –ø–æ–ª—É—á–∞–µ—Ç—Å—è. üòü")

    # pastebin.com/SzNwsd0D